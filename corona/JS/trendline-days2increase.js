$(document).ready(function(){
	let databyDate = {
		"confirmed":[555,654,941,1434,2118,2927,5578,6166,8234,9926,12038,16787,19887,23898,27643,30802,34395,37129,40159,42768,44810,45228,60381,66908,69050,71234,73269,75151,75651,76211,76840,78601,78981,79545,80398,81375,82735,84120,86013,88395,90372,92957,95272,98028,102018,106036,109993,113946,118967,126675,132450,146783,157801,169032,183677,199391,218683,245633,275963,307709,341784,384630,425787,476680,539069,603910,671653,731267,795997,872495,948663,1030010,1113203,1193711,1265377,1338067,1415186,1498895,1585483,1672988,1749872,1846819,1916464,1986284,2067245,2163941,2251672,2325485,2406054,2479522,2554727,2631781,2720583,2807495,2892296,2965076,3034072,3109425,3186589,3270117,3357276,3438689,3516333,3592506,3672660,3762727,3851894,3943470,4029169,4105292,4181640,4265367,4350206,4447281,4543711,4639021,4717335,4805823,4902461,5005574,5111869,5218664,5323977,5419242,5506311,5598982,5701734,5821183,5942378,6080002,6187396,6282981,6403944,6522099,6649014,6779972,6915760,7027674,7130092,7254608,7389151,7527086,7656149,7791901,7925110,8044663,8186473,8328685,8468705,8648774,8806595,8935273,9073260,9238052,9409498,9587195,9778566,9957498,10119644,10275992,10449832,10666930,10874417,11077903,11271954,11454850,11620802,11831641,12043466,12271553,12503942,12720381,12913142,13105192,13326971,13557898,13810459,14052261,14290096,14504853,14710995,14944726,15225164,15507881,15789074,16044757,16258079,16484206,16736727,17025889,17306523,17596559,17847574,18076718,18278778,18537524,18808754,19093901,19374812,19634542,19858792,20086280,20341107,20618174,20904123,21208474,21456826,21669376,21878471,22134679,22408212,22675329,22946050,23211563,23417506,23643854,23885885,24173746,24452944,24734448,24996456,25222709,25484767,25749642,26031410,26304856,26617971,26881547,27103845,27337760,27570742,27863733,28161885],
		"death":[17,18,26,42,56,82,131,133,171,213,259,362,426,492,564,634,719,806,906,1013,1113,1118,1371,1523,1666,1770,1868,2008,2123,2248,2252,2459,2470,2630,2710,2771,2814,2873,2942,2996,3085,3160,3255,3348,3460,3559,3803,3987,4267,4611,4917,5414,5834,6475,7153,7964,8867,9981,11460,13180,14854,16797,19079,21877,24893,28388,32102,35572,39620,44365,49863,56101,62205,68351,73540,79481,87712,94464,102237,109629,115854,121671,127587,134567,142918,150221,158588,164601,169862,175726,182917,189644,196485,203142,208774,212708,217382,223929,230657,236559,241722,247205,250694,254808,260714,267277,272579,278054,282287,285874,289354,294889,299981,305171,310304,314424,317712,321412,326158,330926,335657,340851,344742,347870,349062,353180,358326,362944,367536,371610,374478,377554,382296,387745,392879,397453,401265,404006,407707,412562,417623,422322,426545,430722,434129,437559,444294,449396,454386,460545,464746,468747,472311,477539,482712,487411,492109,496574,499712,503435,508361,513291,518361,523297,527661,531133,534954,540984,546257,551670,556965,561750,565740,569553,575148,580582,586332,592988,598609,602661,606829,612998,619920,629817,635852,641398,645058,650233,656545,663118,669124,675313,680796,685087,689402,696350,703302,709787,716089,721499,726039,730973,737391,743999,750232,760366,765715,769903,774036,780909,787659,793684,799224,804787,808648,812998,819396,825680,831566,837080,842452,846353,850535,857015,863028,868733,874639,879577,883339,892646,897383,903686,909479],
		"recovered":[28,30,36,39,52,61,107,126,143,222,284,472,623,852,1124,1487,2011,2616,3244,3946,4683,5150,6295,8058,9395,10865,12583,14352,16121,18177,18890,22886,23394,25227,27905,30384,33277,36711,39782,42716,45602,48228,51170,53796,55865,58359,60694,62493,64404,67002,68324,70251,72622,76032,78086,80838,83321,84958,87403,91670,97885,98351,107992,113775,122145,130921,139424,148891,164337,177825,192918,209967,225415,245832,259672,276252,299643,328359,353707,375509,401766,421180,448347,473436,510106,540926,567049,590968,622623,644613,679456,709881,738661,788712,816491,845096,872865,906136,948318,1013284,1051537,1092416,1124732,1158819,1195359,1241365,1280833,1317383,1370933,1404527,1451521,1488542,1544398,1584114,1632122,1688714,1729621,1782542,1834647,1893575,1944840,2053491,2108462,2163902,2227625,2282839,2346232,2413089,2490435,2560888,2637208,2692105,2796228,2875332,2945385,3014544,3086748,3141849,3293412,3375694,3454832,3540714,3620438,3706372,3777157,3857365,3955205,4073992,4155134,4250149,4365974,4434711,4526337,4630412,4746172,4839028,4945742,5052107,5141227,5235793,5353115,5469041,5753918,5863818,6059651,6178973,6302585,6447610,6605559,6740073,6879465,7005174,7116853,7257197,7399397,7559178,7711548,7894858,8045815,8133692,8292688,8467335,8643722,8813886,9043203,9262520,9402996,9572619,9746473,9948163,10170650,10369140,10553585,10690555,10913000,11134735,11356275,11545401,11737927,11939109,12115825,12280520,12585473,12826815,12992176,13276831,13445842,13676868,13888301,14116451,14333914,14541573,14712252,14922177,15137610,15337659,15570598,15794947,15996510,16196934,16408559,16616995,16818436,17073236,17291874,17512585,17726336,17927195,18137310,18336112,18524391,18776723,18992383]
	}
	const dates = [
		['Jan',22,2020],['Jan',23,2020],['Jan',24,2020],['Jan',25,2020],['Jan',26,2020],['Jan',27,2020],['Jan',28,2020],['Jan',29,2020],['Jan',30,2020],['Jan',31,2020],['Feb',1,2020],['Feb',2,2020],['Feb',3,2020],['Feb',4,2020],['Feb',5,2020],['Feb',6,2020],['Feb',7,2020],['Feb',8,2020],['Feb',9,2020],['Feb',10,2020],['Feb',11,2020],['Feb',12,2020],['Feb',13,2020],['Feb',14,2020],['Feb',15,2020],['Feb',16,2020],['Feb',17,2020],['Feb',18,2020],['Feb',19,2020],['Feb',20,2020],['Feb',21,2020],['Feb',22,2020],['Feb',23,2020],['Feb',24,2020],['Feb',25,2020],['Feb',26,2020],['Feb',27,2020],['Feb',28,2020],['Feb',29,2020],['Mar',1,2020],['Mar',2,2020],['Mar',3,2020],['Mar',4,2020],['Mar',5,2020],['Mar',6,2020],['Mar',7,2020],['Mar',8,2020],['Mar',9,2020],['Mar',10,2020],['Mar',11,2020],['Mar',12,2020],['Mar',13,2020],['Mar',14,2020],['Mar',15,2020],['Mar',16,2020],['Mar',17,2020],['Mar',18,2020],['Mar',19,2020],['Mar',20,2020],['Mar',21,2020],['Mar',22,2020],['Mar',23,2020],['Mar',24,2020],['Mar',25,2020],['Mar',26,2020],['Mar',27,2020],['Mar',28,2020],['Mar',29,2020],['Mar',30,2020],['Mar',31,2020],['Apr',1,2020],['Apr',2,2020],['Apr',3,2020],['Apr',4,2020],['Apr',5,2020],['Apr',6,2020],['Apr',7,2020],['Apr',8,2020],['Apr',9,2020],['Apr',10,2020],['Apr',11,2020],['Apr',12,2020],['Apr',13,2020],['Apr',14,2020],['Apr',15,2020],['Apr',16,2020],['Apr',17,2020],['Apr',18,2020],['Apr',19,2020],['Apr',20,2020],['Apr',21,2020],['Apr',22,2020],['Apr',23,2020],['Apr',24,2020],['Apr',25,2020],['Apr',26,2020],['Apr',27,2020],['Apr',28,2020],['Apr',29,2020],['Apr',30,2020],['May',1,2020],['May',2,2020],['May',3,2020],['May',4,2020],['May',5,2020],['May',6,2020],['May',7,2020],['May',8,2020],['May',9,2020],['May',10,2020],['May',11,2020],['May',12,2020],['May',13,2020],['May',14,2020],['May',15,2020],['May',16,2020],['May',17,2020],['May',18,2020],['May',19,2020],['May',20,2020],['May',21,2020],['May',22,2020],['May',23,2020],['May',24,2020],['May',25,2020],['May',26,2020],['May',27,2020],['May',28,2020],['May',29,2020],['May',30,2020],['May',31,2020],['Jun',1,2020],['Jun',2,2020],['Jun',3,2020],['Jun',4,2020],['Jun',5,2020],['Jun',6,2020],['Jun',7,2020],['Jun',8,2020],['Jun',9,2020],['Jun',10,2020],['Jun',11,2020],['Jun',12,2020],['Jun',13,2020],['Jun',14,2020],['Jun',15,2020],['Jun',16,2020],['Jun',17,2020],['Jun',18,2020],['Jun',19,2020],['Jun',20,2020],['Jun',21,2020],['Jun',22,2020],['Jun',23,2020],['Jun',24,2020],['Jun',25,2020],['Jun',26,2020],['Jun',27,2020],['Jun',28,2020],['Jun',29,2020],['Jun',30,2020],['Jul',1,2020],['Jul',2,2020],['Jul',3,2020],['Jul',4,2020],['Jul',5,2020],['Jul',6,2020],['Jul',7,2020],['Jul',8,2020],['Jul',9,2020],['Jul',10,2020],['Jul',11,2020],['Jul',12,2020],['Jul',13,2020],['Jul',14,2020],['Jul',15,2020],['Jul',16,2020],['Jul',17,2020],['Jul',18,2020],['Jul',19,2020],['Jul',20,2020],['Jul',21,2020],['Jul',22,2020],['Jul',23,2020],['Jul',24,2020],['Jul',25,2020],['Jul',26,2020],['Jul',27,2020],['Jul',28,2020],['Jul',29,2020],['Jul',30,2020],['Jul',31,2020],['Aug',1,2020],['Aug',2,2020],['Aug',3,2020],['Aug',4,2020],['Aug',5,2020],['Aug',6,2020],['Aug',7,2020],['Aug',8,2020],['Aug',9,2020],['Aug',10,2020],['Aug',11,2020],['Aug',12,2020],['Aug',13,2020],['Aug',14,2020],['Aug',15,2020],['Aug',16,2020],['Aug',17,2020],['Aug',18,2020],['Aug',19,2020],['Aug',20,2020],['Aug',21,2020],['Aug',22,2020],['Aug',23,2020],['Aug',24,2020],['Aug',25,2020],['Aug',26,2020],['Aug',27,2020],['Aug',28,2020],['Aug',29,2020],['Aug',30,2020],['Aug',31,2020],['Sep',1,2020],['Sep',2,2020],['Sep',3,2020],['Sep',4,2020],['Sep',5,2020],['Sep',6,2020],['Sep',7,2020],['Sep',8,2020],['Sep',9,2020],['Sep',10,2020]

	]
	const canvas = document.getElementById("canvas");
	const canHgt = 450;
	const canWid = 750;
	const canWidAvailable = 680;
	canvas.style.height = canHgt+'px';
	canvas.style.width = canWid+'px';
	canvas.height = canHgt*2;
	canvas.width = canWid*2;
	const ctx = canvas.getContext("2d");
	ctx.scale(2,2);
	ctx.lineWidth = 5;
	ctx.strokeColor = '#000'
		
	const colorArray = ['#FF0000','#C9224C','#7c4cc2','#C24C92','#4c92c2','#464646','#FF9933','#92C24C','#4cc292','#99FF33','#9933FF'];
	let slideIndex;
	let counter = 0;
	let circleArray = [];
	const widthStep = canWidAvailable/(dates.length);
	const heightFactor = 31000000;
	let secs = 50;

	let data, options, chart, counterCountry = 0, dataPlace, optionsPlace, chartPlace, counterPlace = 0; 
	let indexCounterPrev = 0;
	let indexCounterCurr = 0;
	function drawRegionsMap(counter) {
		$('.stateName').addClass('active');
		
		dates[counter][1]>9?$('.date').text(`${dates[counter][1]},`):$('.date').text(`0${dates[counter][1]},`)
		$('.month').text(dates[counter][0])
		$('.year').text(dates[counter][2])

		ctx.beginPath();
		const confRect = databyDate['confirmed'][counter];
		ctx.fillStyle = '#FBE8E8';
		ctx.rect(
			(widthStep*counter)+1,
			(canHgt*(1-(confRect/heightFactor))),
			widthStep-2,
			(canHgt*(confRect/heightFactor))
		);
		ctx.fill();
		ctx.closePath();

		if(counter>0){
			ctx.beginPath();
			ctx.strokeStyle = '#8C1919';
			ctx.lineCap = "round";
			ctx.moveTo((widthStep*(counter-(1/2))),(canHgt*(1-(databyDate['confirmed'][counter-1]/heightFactor))));
			ctx.lineTo((widthStep*(counter+(1/2))),(canHgt*(1-(databyDate['confirmed'][counter]/heightFactor))))
			ctx.stroke();
			ctx.closePath();

			ctx.beginPath();
			ctx.strokeStyle = '#F86E6E';
			ctx.strokeStyle = '#198C19';
			ctx.lineCap = "round";
			ctx.moveTo((widthStep*(counter-(1/2))),(canHgt*(1-(databyDate['recovered'][counter-1]/heightFactor))));
			ctx.lineTo((widthStep*(counter+(1/2))),(canHgt*(1-(databyDate['recovered'][counter]/heightFactor))))
			ctx.stroke();
			ctx.closePath();

			ctx.beginPath();
			ctx.strokeStyle = '#525252';
			ctx.lineCap = "round";
			ctx.moveTo((widthStep*(counter-(1/2))),(canHgt*(1-(databyDate['death'][counter-1]/heightFactor))));
			ctx.lineTo((widthStep*(counter+(1/2))),(canHgt*(1-(databyDate['death'][counter]/heightFactor))))
			ctx.stroke();
			ctx.closePath();

			indexCounterCurr = counter
			if(Math.floor(databyDate['confirmed'][counter]/1000000) === Math.floor(databyDate['confirmed'][counter-1]/1000000)){
				// $('.inner').css({'top':Math.floor(databyDate['confirmed'][counter]/100000)*40+'px'})
			}else{
				secs += 5
				$('.infoBox').addClass('active')
				if(counter !== dates.length-1){
					ctx.beginPath();
					ctx.fillStyle = '#FFF';
					ctx.lineCap = "round";
					ctx.moveTo((widthStep*(counter+(1/2))),(canHgt*(1-(databyDate['confirmed'][counter]/heightFactor))));
					ctx.arc((widthStep*(counter+(1/2))),(canHgt*(1-(databyDate['confirmed'][counter]/heightFactor))), widthStep, 0, 2*Math.PI)
					ctx.fill();
					ctx.closePath();
				}else{
				}
				
				console.log(Math.floor(databyDate['confirmed'][counter]/1000000),indexCounterCurr - indexCounterPrev)
				indexCounterPrev = counter
				$('.inner').css({'top':(-1 + Math.floor(databyDate['confirmed'][counter]/1000000))*-40+'px'})
			}
		}

		let confNum;
		let country;
		let dethNum;
		let recvNum;


		confNum = databyDate['confirmed'][counter]
		confNum>100000
			?confNum = (confNum/100000).toFixed(2)+'L'
			:confNum>1000
				?confNum = (confNum/1000).toFixed(1)+'K'
				:confNum = confNum
		$('.confirmedData').text(confNum)

		recvNum = databyDate['recovered'][counter]
		recvNum>100000
			?recvNum = (recvNum/100000).toFixed(2)+'L'
			:recvNum>1000
				?recvNum = (recvNum/1000).toFixed(1)+'K'
				:recvNum = recvNum
		$('.recoveredData').text(recvNum)

		dethNum = databyDate['death'][counter]
		dethNum>100000
			?dethNum = (dethNum/100000).toFixed(2)+'L'
			:dethNum>1000
				?dethNum = (dethNum/1000).toFixed(1)+'K'
				:dethNum = dethNum
		$('.deathsData').text(dethNum)

	}
	function init(label){
		
		
		if(!label){

			setTimeout(function(){
				init(1);
			},2000);
		}else if(label<=dates.length){
			setTimeout(function(){
				drawRegionsMap(label-1);
				if(dates[label-1]){
						// console.log('stop');
						init(label+1);
				}else{
					init(label+1);
				}
			},secs)
		}else{
		}
	}
	setTimeout(function(){
		ctx.beginPath();
        ctx.setLineDash([])
        ctx.lineWidth =1;
        ctx.strokeStyle = '#707070';
        ctx.fillStyle = '#707070';
        ctx.rect(canWidAvailable,0,1,canHgt);
        ctx.rect(0,canHgt-1,canWidAvailable,1);
        ctx.fill();
        ctx.closePath();
        for (let counter = 0; counter < 31000; counter+=2000) {
            ctx.lineWidth =1;
            ctx.beginPath();
            ctx.font = '500 16px Montserrat'
            ctx.textAlign = 'left';
            if(counter%10000 === 0 && counter!==0){
                ctx.fillText(counter/100+'L', canWidAvailable + 25, 6+(canHgt*(1-(counter*1000/heightFactor))));
                // ctx.fill();
            }else if(counter===0){
                ctx.fillText(counter/100+'L', canWidAvailable + 25, canHgt);
            }
            ctx.closePath();
            

            ctx.beginPath();
            counter%10000 === 0?
                ctx.rect(canWidAvailable,(canHgt*(1-(counter*1000/heightFactor))),20,1)
                :ctx.rect(canWidAvailable,(canHgt*(1-(counter*1000/heightFactor))),10,1);
            ctx.fill();
            ctx.closePath()

            ctx.setLineDash([])
            ctx.lineWidth =5;
        }
		init(1);
	},2000);
});
